@model N.G.HRS.Areas.GeneralConfiguration.Models.Governorate
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "المحافظات";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Active"] = "AddEmployee";
    ViewData["Open"] = "Open2";
    ViewData["OpenOperation"] = "OpenOperation2";
}
<nav class="page-breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="../../../dashboard.html"> الرئيسة</a></li>
        <li class="breadcrumb-item active" aria-current="page"> تهيئة النظام</li>
        <li class="breadcrumb-item active" aria-current="page"> التهيئة العامة</li>
        <li class="breadcrumb-item active" aria-current="page"> <a asp-action="Index"> المحافظات</a>              </li>
    </ol>
</nav>

<div class="row">
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
               
                        <div class="card-header">
                            <h3>  المحافظات </h3>
                        </div>
                        <form asp-action="Create">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="row">
                            <div class="form-group col-md-6">
                                <label asp-for="Name" class="control-label"></label>
                                <input asp-for="Name" id="GovernorateId" class="form-control" />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                            <div class="form-group col-md-6">
                                <label asp-for="CountryId" class="control-label"></label>
                                @*                 <select asp-for="CountryId" class="js-example-basic-single form-select" asp-items="ViewBag.CountryId">  >
                                *@                    <select asp-for="CountryId" class="js-example-basic-single form-select" asp-items="ViewBag.CountryId" as SelectList>

                                    <option value="">  </option>
                                </select>
                            </div>
                            </div>
                            <div class="form-group col-md-12 mb-3">
                                <label asp-for="Notes" class="control-label"></label>
                                <input asp-for="Notes" id="GovernorateNotes" class="form-control" />
                                <span asp-validation-for="Notes" class="text-danger"></span>
                            </div>
                            <div class="flexable mb-3">
                                <div>
                                    <button type="button" id="addGovernorateBtn" class="btn btn-primary me-2">إضافة</button>
                                </div>
                                <div>
                                    <a asp-action="Index" class="btn btn-light "> رجوع للقائمة</a>
                                </div>
                                <div>
                                    <div class="dropdown">
                                        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            @* <i data-feather="more-vertical"></i> *@
                                        </button>
                                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                            <button type="button" class="dropdown-item" id="showFileInGovernorate">استيراد ملف Excel</button>
                                            <button type="button" class="dropdown-item" id="exportToExcelGovernorate">تصدير إلى Excel</button>
                                        </div>
                                    </div>
                                </div>

                                <div>
                                    <input type="submit" value="حفظ البيانات" class="btn btn-primary me-2" id="saveDataBtn" style="display: none" />
                                </div>
                                <div>
                                    <button type="button" id="clearTableBtn" style="display:none" class="btn btn-danger">حذف الكل</button>
                                </div>
                            </div>
                            <div class="form-group">
@*                                 <button type="button" id="addGovernorateBtn" class="btn btn-primary me-2">اظافة</button>*@  
@* <input type="submit" value="حفظ البيانات" class="btn btn-primary me-2" id="saveDataBtn" style="display: none" /> *@
                                @* <a asp-action="Index" class="btn btn-primary"> الرجوع الى القائمة</a> *@
                                @* <button type="button" id="clearTableBtn" style="display:none" class="btn btn-danger">حذف الكل</button> *@


                                @* <button type="button" id="showFileInGovernorate" class="btn btn-primary">استيراد ملف Excel</button>
                                <button type="button" class="btn btn-primary" id="exportToExcelGovernorate">تصدير إلى Excel</button> *@
                            </div>
                        </form>
                      
                        @*         //============================استيراد ملف اكسل الى قاعدة البيانات=======
                        *@


                  

                        @using (Html.BeginForm("ImportGovernorates", "Governorates", FormMethod.Post, new { enctype = "multipart/form-data", id = "ImportGovernorates" }))
                        {
                            <div id="fileInputContainerGovernorate" class="mb-3" style="display: none;">
                                <input type="file" name="file" class="form-control" accept=".xls,.xlsx" id="fileInput">
                                <button type="button" class="btn btn-primary" id="uploadBtn" style="display: none;">تحميل الملف</button>
                                <div id="fileError" class="text-danger"></div>
                            </div>
                        }

                    
            </div>
        </div>
    </div>
</div>









<table id="temporaryTable" class="table" style="display:none;">
    <thead>
        <tr>
            <th>#</th>
            <th> المحافظة</th>
            <th>الملاحظات</th>
            <th>الدولة</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }


    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>
    <script type="text/javascript">
        document.getElementById('showFileInGovernorate').addEventListener('click', function () {
            var fileInputContainerGovernorate = document.getElementById('fileInputContainerGovernorate');
            fileInputContainerGovernorate.style.display = 'block';
        });

        document.getElementById('fileInput').addEventListener('change', function () {
            var file = this.files[0];
            var fileName = this.value.toLowerCase();
            var fileError = document.getElementById('fileError');
            var uploadBtn = document.getElementById('uploadBtn');

            if (file && file.size > 0) {
                if (fileName.endsWith('.xls') || fileName.endsWith('.xlsx')) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var data = new Uint8Array(e.target.result);
                        var workbook = XLSX.read(data, { type: 'array' });
                        var firstSheet = workbook.Sheets[workbook.SheetNames[0]];
                        var rows = XLSX.utils.sheet_to_json(firstSheet, { header: 1 });

                        var requiredColumns = ["ID", "المحافظة", "الملاحظة", "الدولة"];
                        var header = rows[0];
                        var isHeaderValid = header && requiredColumns.every((col, index) => {
                            var trimmedHeader = header[index] ? header[index].trim() : '';
                            return trimmedHeader === col;
                        });

                        if (isHeaderValid) {
                            var isDataPresent = rows.length > 1 && rows.slice(1).some(row => row.some(cell => cell));

                            if (isDataPresent) {
                                uploadBtn.style.display = 'inline-block'; // عرض زر التحميل
                                fileError.style.display = 'none'; // إخفاء رسالة الخطأ
                            } else {
                                showError("الملف لا يحتوي  البيانات : فارغ.");
                            }
                        } else {
                            var missingColumns = requiredColumns.filter((col, index) => !header[index] || header[index].trim() !== col);
                            showError("الملف لا يحتوي على الأعمدة المطلوبة:", missingColumns);
                        }
                    };
                    reader.readAsArrayBuffer(file);
                } else {
                    showError("يجب اختيار ملف بصيغة Excel فقط!");
                }
            } else {
                showError("يرجى تحديد ملف غير فارغ.");
            }
        });

        function showError(message, missingColumns = []) {
            var uploadBtn = document.getElementById('uploadBtn');
            var fileError = document.getElementById('fileError');
            uploadBtn.style.display = 'none'; // إخفاء زر التحميل
            fileError.style.display = 'block'; // عرض رسالة الخطأ

            var errorContent = `<p>${message}</p>`;
            if (missingColumns.length > 0) {
                errorContent += `<table class="table table-bordered"><thead><tr><th>الأعمدة الناقصة</th></tr></thead><tbody>`;
                missingColumns.forEach(col => {
                    errorContent += `<tr><td>${col}</td></tr>`;
                });
                errorContent += `</tbody></table>`;
            }

            fileError.innerHTML = errorContent;
            document.getElementById('fileInput').value = ''; // إعادة تعيين قيمة الملف المختار

            Swal.fire({
                icon: 'error',
                title: message,
                html: errorContent,
                showConfirmButton: false,
                timer: 8000 // يغلق التنبيه تلقائيا بعد 4 ثوان
            }).then(() => {
                fileError.style.display = 'none'; // إخفاء رسالة الخطأ بعد إغلاق التنبيه
            });
        }

        document.getElementById('uploadBtn').addEventListener('click', function (event) {
            event.preventDefault(); // منع السلوك الافتراضي للزر
            Swal.fire({
                title: 'هل تريد استيراد البيانات من ملف Excel؟',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'نعم',
                cancelButtonText: 'لا'
            }).then((result) => {
                if (result.isConfirmed) {
                    var form = document.getElementById('ImportGovernorates');
                    form.submit(); // تقديم النموذج يدويا
                }
            });
        });

        document.getElementById('exportToExcelGovernorate').addEventListener('click', function () {
            Swal.fire({
                title: 'هل تريد تصدير ملف Excel؟',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'نعم',
                cancelButtonText: 'لا'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '@Url.Action("ExportToExcelGovernorates", "Governorates")';
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            var counter = 1;

            function CheckGovernoratesExists(governorate, callback) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("CheckGovernoratesExists", "Governorates")",
                    data: { governorate: governorate },
                    success: function (response) {
                        callback(response.exists);
                    },
                    error: function (xhr, status, error) {
                        console.log("حدث خطأ أثناء التحقق من وجود المحافظة: " + error);
                    }
                });
            }

            function isGovernorateInTable(governorate) {
                var exists = false;
                $("#temporaryTable tbody tr").each(function () {
                    if ($(this).find("td:eq(1)").text().trim() === governorate.trim()) {
                        exists = true;
                    }
                });
                return exists;
            }

            $("#addGovernorateBtn").click(function (event) {
                event.preventDefault();
                var governorate = $("#GovernorateId").val();
                var notes = $("#GovernorateNotes").val();
                var countryId = $("#CountryId").val();
                var countryName = $("#CountryId option:selected").text();

                if (isGovernorateInTable(governorate)) {
                    Swal.fire({
                        icon: "error",
                        title: "اسم المحافظة موجود بالفعل في الجدول"
                    });
                } else {
                    CheckGovernoratesExists(governorate, function (exists) {
                        if (exists) {
                            Swal.fire({
                                icon: "error",
                                title: "اسم المحافظة موجود بالفعل في قاعدة البيانات"
                            });
                        } else if (governorate === "") {
                            Swal.fire({
                                icon: "error",
                                title: "الرجاء ادخال المحافظة!",
                            });
                        } else if (countryId === "") {
                            Swal.fire({
                                icon: "error",
                                title: "الرجاء اختيار الدولة!",
                            });
                        } else {
                            $("#temporaryTable tbody").append(
                                "<tr>" +
                                "<td>" + counter + "</td>" +
                                "<td>" + governorate + "</td>" +
                                "<td>" + notes + "</td>" +
                                "<td>" + countryName + "</td>" +
                                "<td style='display:none' class='countryId'>" + countryId + "</td>" +
                                "<td><button type='button' class='btn btn-danger delete-row'>Delete</button></td>" +
                                "</tr>"
                            );
                            counter++;
                            $("#GovernorateId").val('');
                            $("#GovernorateNotes").val('');

                            $("#clearTableBtn").show();
                            $("#temporaryTable").show();
                            $("#saveDataBtn").show();
                        }
                    });
                }
            });

            $("#saveDataBtn").click(function (event) {
                Swal.fire({
                    title: 'هل أنت متأكد؟',
                    text: "هل تريد حفظ جميع البيانات؟",
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'نعم!',
                    cancelButtonText: 'لا '
                }).then((result) => {
                    if (result.isConfirmed) {
                        $("#temporaryTable tbody tr").each(function () {
                            var governorate = $(this).find("td:eq(1)").text();
                            var notes = $(this).find("td:eq(2)").text();
                            var countryId = $(this).find("td:eq(4)").text();
                            if (governorate && countryId) {
                                SaveGovernorateData(governorate, notes ? notes : "", countryId);
                            }
                        });
                    }
                });
            });

            $(document).on("click", ".delete-row", function () {
                $(this).closest("tr").remove();
                counter--;
                Swal.fire('تم الحذف!', 'تم حذف البيانات بنجاح.', 'success');
                if ($("#temporaryTable tbody tr").length === 0) {
                    $("#saveDataBtn").hide();
                    $("#clearTableBtn").hide();
                }
            });

            $("#clearTableBtn").click(function () {
                Swal.fire({
                    title: 'هل أنت متأكد؟',
                    text: "هل تريد حذف جميع البيانات!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'نعم، احذف الكل'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $("#temporaryTable tbody").empty();
                        counter = 1;
                        $("#saveDataBtn").hide();
                        $("#clearTableBtn").hide();
                        $("#temporaryTable").hide();
                        Swal.fire('تم الحذف!', 'تم حذف جميع البيانات بنجاح.', 'success');
                    }
                });
            });

            function SaveGovernorateData(governorate, notes, countryId) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("SaveGovernorateData", "Governorates")",
                    data: { governorate: governorate, notes: notes, countryId: countryId },
                    success: function (response) {
                        Swal.fire('تم الحفظ!', 'تم حفظ جميع البيانات بنجاح.', 'success').then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = "@Url.Action("Index")";
                            }
                        });
                    },
                    error: function (xhr, status, error) {
                        alert("حدث خطأ أثناء حفظ البيانات: " + error);
                    }
                });
            }
        });

    </script>

}
