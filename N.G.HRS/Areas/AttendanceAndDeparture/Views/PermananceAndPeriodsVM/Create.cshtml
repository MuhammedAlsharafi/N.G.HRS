@model N.G.HRS.Areas.AttendanceAndDeparture.ViewModels.PermanenceModelsAndPeriodsVM
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "نماذج الدوام";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Active"] = "AddEmployee";
    ViewData["Open"] = "Open2";
    ViewData["OpenOperation"] = "OpenOperation2";
}

<div class="row rowmargin">
    <div class="col-md-12 stretch-card">
        <div class="card">
            <div class="card-body">
                <h6 class="card-title headerStyle">نماذج الدوام</h6>
                <br />
                <br />
                <br />
                <hr style="color: black" />
                <br />

                <!-- Row -->
                <form asp-action="Create" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="row set">
                        @*                         <div class="col-sm-6" style="display: none">
                        <div class="mb-3">
                        <label asp-for="permanenceModels.Id"  class="form-label"></label>
                        <input asp-for="permanenceModels.Id" id="permananceId"
                        class="form-control" />
                        </div>
                        </div>      *@
                        <div class="col-sm-6">
                            <div class="mb-3">
                                <label asp-for="permanenceModels.PermanenceName" class="form-label"></label>
                                <input asp-for="permanenceModels.PermanenceName" id="PermanenceName" class="form-control" />
                                <span asp-validation-for="permanenceModels.PermanenceName" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="mb-3">

                                <label asp-for="permanenceModels.FromDate" class="form-label"></label><span class="text-danger">*</span>
                                <div class="input-group flatpickr flatpickr-date" id="flatpickr-date">
                                    <input asp-for="permanenceModels.FromDate" id="pMFromDate" class="form-control" placeholder="أدخل التاريخ"
                                           data-input />
                                    <span class="input-group-text input-group-addon" data-toggle>
                                        <i data-feather="calendar"></i>
                                    </span>
                                    <span asp-validation-for="permanenceModels.FromDate" class="text-danger"></span>

                                </div>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="mb-3">

                                <label asp-for="permanenceModels.ToDate" class="form-label"></label><span class="text-danger">*</span>
                                <div class="input-group flatpickr flatpickr-date" id="flatpickr-date">
                                    <input asp-for="permanenceModels.ToDate" id="pMToDate" class="form-control" placeholder="أدخل التاريخ"
                                           data-input />
                                    <span class="input-group-text input-group-addon" data-toggle>
                                        <i data-feather="calendar"></i>
                                    </span>
                                    <span asp-validation-for="permanenceModels.ToDate" class="text-danger"></span>

                                </div>
                            </div>
                        </div>
                        <!-- Col -->
                        <!-- <div class="col-sm-2">
                            <div class="mb-3">
                                <input type="button" value="إيقاف" class="form-control"
                                    placeholder="إيقاف" style="background-color: red; color: black; border: solid 1px black; font-weight: bold; " />
                            </div>
                        </div> -->
                        <!-- Col -->
                    </div>
                    <div class="row set">
                        <div class="col-sm-2">
                            <div class="mb-3 form-group form-check">

                                <label class="form-check-label">
                                    <input class="form-check-input" id="pMFlexibleWorkingHoursCheckBox" name="radiobutton"
                                           asp-for="permanenceModels.FlexibleWorkingHours" /> @Html.DisplayNameFor(model =>
                                    model.permanenceModels.FlexibleWorkingHours)
                                </label>
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="mb-3 form-group form-check">

                                <label class="form-check-label">
                                    <input class="form-check-input" id="pMWorkBetweenTwoShiftsCheckBox" name="radiobutton"
                                           asp-for="permanenceModels.WorkBetweenTwoShifts" /> @Html.DisplayNameFor(model =>
                                    model.permanenceModels.WorkBetweenTwoShifts)
                                </label>
                            </div>
                        </div>
                        <!-- Col -->
                        <div class="col-sm-3">
                            <div class="mb-3" id="pMFromTimeGroup">
                                <label asp-for="permanenceModels.FromTime" class="form-label"></label><span class="text-danger">*</span>

                                <div class="input-group flatpickr" id="flatpickr-time">
                                    <input asp-for="permanenceModels.FromTime" id="pMFromTime" class="form-control" placeholder="أدخل الوقت"
                                           data-input />
                                    <span class="input-group-text input-group-addon" data-toggle>
                                        <i data-feather="clock"></i>
                                    </span>
                                    <span asp-validation-for="permanenceModels.FromTime" class="text-danger"></span>
                                </div>

                            </div>

                        </div>
                        <!-- Col -->
                        <div class="col-sm-3">
                            <div class="mb-3" id="pMToTimeGroup">
                                <label asp-for="permanenceModels.ToTime" class="form-label"></label><span class="text-danger">*</span>

                                <div class="input-group flatpickr" id="flatpickr-time">
                                    <input asp-for="permanenceModels.ToTime" tabindex="8" id="pMToTime" class="form-control" placeholder="أدخل الوقت"
                                           data-input />
                                    <span class="input-group-text input-group-addon" data-toggle>
                                        <i data-feather="clock"></i>
                                    </span>
                                    <span asp-validation-for="permanenceModels.ToTime" class="text-danger"></span>
                                </div>

                            </div>
                        </div>
                        <!-- Col -->
                        <div class="col-sm-2">
                            <div class="mb-3" id="pMHoursGroup">
                                <label asp-for="permanenceModels.HoursOfWorks" class="form-label"></label>
                                <input asp-for="permanenceModels.HoursOfWorks" id="pMHours"
                                       style="background-color: #00000005;cursor:context-menu" class="form-control" />
                                <span asp-validation-for="permanenceModels.HoursOfWorks" class="text-danger"></span>
                            </div>
                        </div>
                        <!-- Col -->
                    </div>
                    <div class="row set">
                        <div class="col-sm-4">
                            <div class="mb-3 form-group form-check">
                                <label class="form-check-label">
                                    اضافة سماحية حضور وانصراف
                                    <input asp-for="permanenceModels.AddAttendanceAndDeparturePermission" type="checkbox" id="pMAttendanceCheckbox" style="color:#e5b540;" class="form-check-input" />
                                </label>
                            </div>
                        </div>
                        <!-- Col -->
                        <!-- Col -->
                        <div class="col-sm-4">
                            <div class="mb-3" id="pMLateAttendanceGroup">
                                <label asp-for="permanenceModels.AllowanceForLateAttendance" class="form-label">حضور متأخر</label>
                                <input asp-for="permanenceModels.AllowanceForLateAttendance" type="number" id="pMLateAttendance" class="form-control"
                                       placeholder="حضور متأخر بالدقيقة من 0 الى 60 دقيقة" />
                                <span asp-validation-for="permanenceModels.AllowanceForLateAttendance" class="text-danger"></span>

                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="mb-3" id="pMEarlyAttendanceGroup">
                                <label asp-for="permanenceModels.EarlyDeparturePermission" class="form-label">انصراف مبكر</label>
                                <input asp-for="permanenceModels.EarlyDeparturePermission" type="number" id="pMEarlyAttendance" class="form-control"
                                       placeholder="انصراف مبكر بالدقيقة من 0 الى 60 دقيقة" />
                                <span asp-validation-for="permanenceModels.EarlyDeparturePermission" class="text-danger"></span>

                            </div>
                        </div>
                        <!-- Col -->
                    </div>
                    <!-- Row -->
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="mb-3">
                                <label asp-for="permanenceModels.Notes" class="form-label"></label>
                                <input asp-for="permanenceModels.Notes" class="form-control" />
                                <span asp-validation-for="permanenceModels.Notes" class="text-danger"></span>
                            </div>
                        </div>
                        <!-- Col -->
                    </div>
                    <!-- Row -->
                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                    <br />
                </form>
                <div class="form-group">
                    <span>
                        <a asp-action="Index">Back to List</a>
                    </span>
                    <span>
                        <button id="openFormButton" type="button" class="btn btn-primary">اضفة فترة</button>
                    </span>

                </div>

            </div>
            <!-- ================================================================= -->
            <div id="openForm" style="display: none">
                <div id="form" class="row rowmargin">
                    <div class="col-md-12 stretch-card">
                        <div class="card">
                            <button id="closeFormButton" style="right: 10px; top:0px;width: 50px" type="button" class="btn btn-primary"><i data-feather="x"></i></button>

                            <div class="card-body">
                                <!--  -->
                                <div class="card-body">
                                    <h6 class="card-title"
                                        style="width:60px;  padding-bottom:3px; border-bottom:1px solid black;">
                                        الفترات
                                    </h6>


                                    <!--  -->
                                    <form asp-action="CreatePeriods" method="post">

                                        <div class="row">
                                            <div class="col-sm-6">
                                                <div class="mb-3">
                                                    <label asp-for="periods.PermanenceModelsId" class="form-label"></label>
                                                    <select asp-for="periods.PermanenceModelsId" id="periodPermanenceModelsId" asp-items="@(ViewData["permanance"] as SelectList)" id="periodPermanenceModelsId" class="form-control">
                                                        <option value="">-- أختر الدوام --</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col-sm-4">
                                                <div class="mb-3">
                                                    <label asp-for="periods.PeriodsName" class="form-label"></label>
                                                    <input asp-for="periods.PeriodsName" id="PeriodsName" class="form-control" />
                                                    <span asp-validation-for="periods.PeriodsName" class="text-danger"></span>
                                                </div>
                                            </div>

                                        </div>

                                        <!-- Col -->
                                        <!-- Row -->
                                        <div class="row">
                                            <div class="col-md-2 stretch-card">
                                                <div class="form-check form-check-inline">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" id="saturday"
                                                               asp-for="periods.Saturday" />
                                                        @Html.DisplayNameFor(model => model.periods.Saturday)
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-md-2 stretch-card">
                                                <div class="form-check form-check-inline">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" id="sunday"
                                                               asp-for="periods.SunDay" />
                                                        @Html.DisplayNameFor(model => model.periods.SunDay)
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-md-2 stretch-card">
                                                <div class="form-check form-check-inline">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" id="monday"
                                                               asp-for="periods.Monday" />
                                                        @Html.DisplayNameFor(model => model.periods.Monday)
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-md-2 stretch-card">
                                                <div class="form-check form-check-inline">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" id="tuesday"
                                                               asp-for="periods.Tuesday" />
                                                        @Html.DisplayNameFor(model => model.periods.Tuesday)
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-md-2 stretch-card">
                                                <div class="form-check form-check-inline">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" id="wednesday"
                                                               asp-for="periods.Wednesday" />
                                                        @Html.DisplayNameFor(model => model.periods.Wednesday)
                                                    </label>
                                                </div>
                                            </div>

                                            <div class="col-md-2 stretch-card">
                                                <div class="form-check form-check-inline">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" id="tuesday"
                                                               asp-for="periods.Thursday" />
                                                        @Html.DisplayNameFor(model => model.periods.Thursday)
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-md-2 stretch-card">
                                                <div class="form-check form-check-inline">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" id="friday"
                                                               asp-for="periods.Friday" />
                                                        @Html.DisplayNameFor(model => model.periods.Friday)
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                        <br>
                                        <div class="row set">

                                            <div class="col-sm-3">
                                                <div class="mb-3">
                                                    <label asp-for="periods.FromTime" class="form-label"></label><span class="text-danger">*</span>

                                                    <div class="input-group flatpickr" id="flatpickr-time">
                                                        <input asp-for="periods.FromTime" id="peFromTime" class="form-control" placeholder="أدخل الوقت"
                                                               data-input />
                                                        <span class="input-group-text input-group-addon" data-toggle>
                                                            <i data-feather="clock"></i>
                                                        </span>
                                                        <span asp-validation-for="periods.FromTime" class="text-danger"></span>
                                                    </div>

                                                </div>

                                            </div>
                                            <div class="col-sm-3">
                                                <div class="mb-3">
                                                    <label asp-for="periods.ToTime" class="form-label"></label><span class="text-danger">*</span>

                                                    <div class="input-group flatpickr" id="flatpickr-time">
                                                        <input asp-for="periods.ToTime" id="perToTime" class="form-control" placeholder="أدخل الوقت"
                                                               data-input />
                                                        <span class="input-group-text input-group-addon" data-toggle>
                                                            <i data-feather="clock"></i>
                                                        </span>
                                                        <span asp-validation-for="periods.ToTime" class="text-danger"></span>
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <div class="mb-3">
                                                    <label asp-for="periods.Hours" class="form-label"></label>
                                                    <input asp-for="periods.Hours" id="perHours"
                                                           style="background-color: #00000005;cursor:context-menu" readonly
                                                           class="form-control" />
                                                    <span asp-validation-for="periods.Hours" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <div class="mb-3">
                                                    <label asp-for="periods.Muinutes" class="form-label"></label>
                                                    <input asp-for="periods.Muinutes"
                                                           style="background-color: #00000005;cursor:context-menu" readonly
                                                           id="perMinutes" class="form-control" />
                                                    <span asp-validation-for="periods.Muinutes"
                                                          class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @*                                             <button type="button" id="addButton" class="btn btn-primary">اضافة</button>
                                            *@                                            <input type="submit" id="submitButton" value="انهاء"
                                                                                                 class="btn btn-primary" />
                                        </div>

                                    </form>
                                    <!-- Row -->
                                    <br />


                                    <!--  -->
                                </div>
                            </div>
                            <div id="table" class="row" style="display: none">
                                <div class="col-md-12 grid-margin stretch-card">
                                    <div class="card">
                                        <div class="card-body">
                                            <h6 class="card-title headerStyle">الفترات</h6>
                                            <div class="table-responsive">
                                                <table class="table">
                                                    <thead>
                                                        <tr>
                                                            <th>الدوام</th>
                                                            <th>الفترات</th>
                                                            <th>من وقت</th>
                                                            <th>الى وقت</th>
                                                            <th>السبت</th>
                                                            <th>الاحد</th>
                                                            <th>الاثنين</th>
                                                            <th>الثلاثاء</th>
                                                            <th>الاربعاء</th>
                                                            <th>الخميس</th>
                                                            <th>الجمعة</th>
                                                            <th>الساعات</th>
                                                            <th>الدقائق</th>
                                                            <th>#</th>

                                                        </tr>
                                                    </thead>
                                                    <tbody id="temporaryTable">
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>
                

                @* ===================================================== *@


                @section Scripts {
                    @{
                        await Html.RenderPartialAsync("_ValidationScriptsPartial");
                    }
                    <script>
                        $(document).ready(function () {
                            var v = new ValidationFromMe();
                            //================نماذج الدوام ===============


                            $('#pMFromDate').change(function () {
                                var from = this.value;
                                var to = $('#pMToDate').val();
                                if (this.value != "") {
                                    if (to != "") {
                                        var check = v.isStartDateBeforeEndDate(from, to);
                                        if (check) {
                                            v.softErrorMessage('تاريخ البداية يجب ان  يكون قبل تاريخ النهاية!! ☹');
                                            this.value = "";

                                        }

                                    }
                                }
                                else {
                                    v.softErrorMessage('يجب عليك تحديد تاريخ البداية!! ☹');
                                }

                            });
                            $('#pMToDate').change(function () {
                                var to = this.value;
                                var from = $('#pMFromDate').val();
                                if (this.value != "") {
                                    if (from != "") {
                                        var check = v.isStartDateBeforeEndDate(from, to);

                                        if (check) {
                                            v.softErrorMessage('تاريخ البداية يجب ان  يكون قبل تاريخ النهاية !! ☹');
                                            this.value = "";
                                        }

                                    }
                                }
                                else {
                                    v.softErrorMessage('يجب عليك تحديد تاريخ البداية!! ☹');
                                }

                            });
                            //=======================================

                            const pMFWHCheckBox = document.getElementById("pMFlexibleWorkingHoursCheckBox");
                            const pMWBTSCheckBox = document.getElementById("pMWorkBetweenTwoShiftsCheckBox");
                            const pMAttCheckbox = document.getElementById("pMAttendanceCheckbox");
                            const pMEarlyAttendanceGroup = document.getElementById("pMEarlyAttendanceGroup");
                            const pMLateAttendanceGroup = document.getElementById("pMLateAttendanceGroup");
                            const pMFromTimeGroup = document.getElementById("pMFromTimeGroup");
                            const pMToTimeGroup = document.getElementById("pMToTimeGroup");
                            const pMHoursGroup = document.getElementById("pMHoursGroup");
                            // const flexa = document.getElementById("flexbleCheckbox");
                            // const attendanceCheckbox = document.getElementById("AttendanceCheckbox");
                            // const earlyattendance = document.getElementById("earlyAttendance");
                            // const lateattendance = document.getElementById("lateAttendance");
                            // const hoursInput1 = document.getElementById("nnHours");

                            // Initial state (hide form if checkbox is unchecked)
                            if (!pMFWHCheckBox.checked || !pMWBTSCheckBox.checked || !pMAttCheckbox.checked) {
                                pMFromTimeGroup.style = `pointer-events: none; filter: none; opacity: .4;`; // Display form
                                pMToTimeGroup.style = `pointer-events: none; filter: none; opacity: .4;`; // Display form
                                pMHoursGroup.style = `pointer-events: none; filter: none; opacity: .4;`; // Display form
                                pMLateAttendanceGroup.style = `pointer-events: none; filter: none; opacity: .4;`; // Display form
                                pMEarlyAttendanceGroup.style = `pointer-events: none; filter: none; opacity: .4;`; // Display form
                            }
                            pMFWHCheckBox.addEventListener("change", function () {
                                if (pMFWHCheckBox.checked) {
                                    pMWBTSCheckBox.checked = false;
                                    pMFromTimeGroup.style = `pointer-events:all ; filter: none; opacity: 1;`; // Hide form
                                    pMToTimeGroup.style = `pointer-events: all; filter: none; opacity: 1;`; // Hide form
                                    pMHoursGroup.style = `pointer-events: all; filter: none; opacity: 1;`; // Hide form


                                    //============================================
                                } else {
                                    pMFromTimeGroup.style = `pointer-events: none; filter: none; opacity: .4;`; // Display form
                                    pMToTimeGroup.style = `pointer-events: none; filter: none; opacity: .4;`; // Display form
                                    pMHoursGroup.style = `pointer-events: none; filter: none; opacity: .4;`; // Display form
                                    $('#pMFromTime').val("");
                                    $('#pMToTime').val("");
                                    $('#pMHours').val("");
                                }
                            });
                            //===
                            pMWBTSCheckBox.addEventListener("change", function () {
                                if (pMWBTSCheckBox.checked) {
                                    $('#pMFromTime').val("");
                                    $('#pMToTime').val("");
                                    $('#pMHours').val("");
                                    pMFWHCheckBox.checked = false;
                                    pMFromTimeGroup.style = `pointer-events:all ; filter: none; opacity: 1;`; // Hide form
                                    pMToTimeGroup.style = `pointer-events: all; filter: none; opacity: 1;`; // Hide form
                                    pMHoursGroup.style = `pointer-events: all; filter: none; opacity: 1;`; // Hide form


                                    //============================================
                                } else {
                                    $('#pMFromTime').val("");
                                    $('#pMToTime').val("");
                                    $('#pMHours').val("");
                                    pMFromTimeGroup.style = `pointer-events: none; filter: none; opacity: .4;`; // Display form
                                    pMToTimeGroup.style = `pointer-events: none; filter: none; opacity: .4;`; // Display form
                                    pMHoursGroup.style = `pointer-events: none; filter: none; opacity: .4;`; // Display form

                                }
                            });
                            //===
                            pMAttCheckbox.addEventListener("change", function () {
                                if (pMAttCheckbox.checked) {
                                    $('#pMEarlyAttendance').val("");
                                    $('#pMLateAttendance').val("");
                                    pMEarlyAttendanceGroup.style = `pointer-events:all ; filter: none; opacity: 1;`; // Hide form
                                    pMLateAttendanceGroup.style = `pointer-events: all; filter: none; opacity: 1;`; // Hide form


                                    //============================================
                                } else {
                                    $('#pMEarlyAttendance').val("");
                                    $('#pMLateAttendance').val("");
                                    pMEarlyAttendanceGroup.style = `pointer-events: none; filter: none; opacity: .4;`; // Display form
                                    pMLateAttendanceGroup.style = `pointer-events: none; filter: none; opacity: .4;`; // Display form

                                }
                            });
                            //===
                            $('#pMFromTime').change(function () {
                                if (this.value != "") {
                                    if (pMWBTSCheckBox.checked || pMFWHCheckBox.checked) {
                                        if ($('#pMToTime').val() != "") {
                                            var cheack = v.isStartTimeAfterEndTime(this.value, $('#pMToTime').val());
                                            if (!cheack) {
                                                var time = v.calculateHoursBetweenWith24(this.value, $('#pMToTime').val());
                                                $('#pMHours').val(time.hours);

                                            }
                                            else {
                                                v.softErrorMessage('وقت البداية يجب ان يكون قبل وقت النهاية !! ☹');
                                                $('#pMFromTime').val("");
                                                $('#pMToTime').val("");
                                                $('#pMHours').val("");
                                            }
                                        }
                                    }
                                    else {
                                        v.softErrorMessage('يجب تحديد على حقل دوام مرن او دوام بين يومين !! ☹');
                                        $('#pMFromTime').val("");
                                        $('#pMToTime').val("");
                                        $('#pMHours').val("");
                                    }

                                }
                                else {
                                    v.softErrorMessage('يجب عليك تحديد وقت البداية!! ☹');
                                }

                            });
                            $('#pMToTime').change(function () {
                                if (this.value != "") {
                                    if (pMWBTSCheckBox.checked || pMFWHCheckBox.checked) {
                                        if ($('#pMFromTime').val() != "") {
                                            var cheack = v.isStartTimeAfterEndTime($('#pMFromTime').val(), this.value);
                                            
                                            if (!cheack) {
                                                var time = v.calculateHoursBetweenWith24($('#pMFromTime').val(), this.value);
                                                $('#pMHours').val(time.hours);
                                            }
                                            else {
                                                v.softErrorMessage('وقت البداية يجب ان يكون قبل وقت النهاية !! ☹');
                                                $('#pMFromTime').val("");
                                                $('#pMToTime').val("");
                                                $('#pMHours').val("");
                                            }
                                        }

                                    }
                                    else {
                                        v.softErrorMessage('يجب تحديد على حقل دوام مرن او دوام بين يومين !! ☹');
                                        $('#pMFromTime').val("");
                                        $('#pMToTime').val("");
                                        $('#pMHours').val("");
                                    }
                                }
                                else {
                                    v.softErrorMessage('يجب عليك تحديد وقت النهاية!! ☹');
                                }
                            });
                            //====================================================================================================
                            //                                  =============== Period Js =====================
                            //====================================================================================================

                            $('#peFromTime').change(function () {
                                if (this.value != "") {
                                    if ($('#perToTime').val() != "") {
                                        var cheack = v.isStartTimeAfterEndTime(this.value, $('#perToTime').val());
                                        if (!cheack) {
                                            var time = v.calculateHoursBetweenWith24(this.value, $('#perToTime').val());
                                            $('#perHours').val(time.hours);
                                            $('#perMinutes').val(time.minutes);
                                        }
                                        else {
                                            v.softErrorMessage('وقت البداية يجب ان يكون قبل وقت النهاية !! ☹');
                                            $('#perMinutes').val("");
                                            $('#perHours').val("");
                                        }
                                    }
                                }
                                else {
                                    v.softErrorMessage('يجب عليك تحديد وقت البداية!! ☹');
                                }

                            });
                            //===
                            $('#perToTime').change(function () {
                                if (this.value != "") {
                                    if ($('#peFromTime').val() != "") {
                                        var cheack = v.isStartTimeAfterEndTime($('#peFromTime').val(), this.value);
                                        if (!cheack) {
                                            var time = v.calculateHoursBetweenWith24($('#peFromTime').val(), this.value);
                                            $('#perHours').val(time.hours);
                                            $('#perMinutes').val(time.minutes);
                                        }
                                        else {
                                            v.softErrorMessage('وقت البداية يجب ان يكون قبل وقت النهاية !! ☹');
                                            $('#perMinutes').val("");
                                            $('#perHours').val("");
                                            $('#peFromTime').val("");
                                            $('#perToTime').val("");
                                        }
                                    }
                                }
                                else {
                                    v.softErrorMessage('يجب عليك تحديد وقت البداية!! ☹');
                                }
                            });
                            //===
                            $('#periodPermanenceModelsId').change(function () {
                                if (this.value != "") {
                                    
                                }
                                else {
                                    v.softErrorMessage('يجب عليك اختيار الدوام !! ☹');
                                }
                            });
                            //===




                            //==========================================
                            //============================Pub window=============================================================================
                            let temporaryData = []; // Array to store temporary data
                            const open = document.getElementById("openForm");
                            const openFormButton = document.getElementById("openFormButton");
                            const form = document.getElementById("form");
                            const closeFormButton = document.getElementById("closeFormButton");
                            closeFormButton.addEventListener("click", function () {
                                open.style = `display:none;`;
                            });
                            openFormButton.addEventListener("click", function () {
                                open.style = `
                                        display:block;
                                        position: fixed;
                                            top: 0;
                                            left: 0;
                                            width: 100%;
                                            height: 100%;
                                            background-color: rgba(0, 0, 0, 0.5);
                                            backdrop-filter: blur(5px);
                                            z-index: 1051;`;

                        form.style = `
                                        width:90%;
                                        display:block;
                                        position: fixed;
                                            top: 50%;
                                            left: 50%;
                                            transform: translate(-50%, -50%);
                                            background-color: #fff;
                                            padding: 20px;
                                            border: 1px solid #ccc;
                                            border-radius: 5px;
                                            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
                                                                    z-index: 1050;
                                            opacity: 1; /* Initially hidden */
                                            transition: opacity 0.3s ease-in-out;`;
                            });
                            //=========================================
                            const table = document.getElementById("table");
                            $("#addButton").click(function () {
                                const newData = {
                                    // Add input field names and their corresponding values here
                                    fieldName1: $("#PeriodsName").val(),
                                    fieldName2: $("#startTime").val(),
                                    fieldName3: $("#endTime").val(),
                                    fieldName4: $("#saturday").val(),
                                    fieldName5: $("#sunday").val(),
                                    fieldName6: $("#monday").val(),
                                    fieldName7: $("#thursday").val(),
                                    fieldName8: $("#wednesday").val(),
                                    fieldName9: $("#tuesday").val(),
                                    fieldName10: $("#friday").val(),
                                    fieldName11: $("#hours").val(),
                                    fieldName12: $("#minutes").val(),

                                    // ... add more fields as needed
                                };
                                if (
                                    !newData.fieldName1 ||
                                    !newData.fieldName2 ||
                                    !newData.fieldName3
                                ) {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'يرجى إداخال الحقول المطلوبة',
                                        customClass: {
                                            confirmButton: 'btn btn-primary'
                                        },
                                        buttonsStyling: false
                                    });
                                } else {
                                    table.style = `display:block;`;
                                    // !newData.fieldName5.checked ? newData.fieldName5.value = false : newData.fieldName5.value = "السبت";
                                    // !newData.fieldName6.checked ? newData.fieldName6.value = false : newData.fieldName6.value = true;
                                    // !newData.fieldName7.checked ? newData.fieldName7.value = false : newData.fieldName7.value = true;
                                    // !newData.fieldName8.checked ? newData.fieldName8.value = false : newData.fieldName8.value = true;
                                    // !newData.fieldName9.checked ? newData.fieldName9.value = false : newData.fieldName9.value = true;
                                    // !newData.fieldName10.checked ? newData.fieldName10.value = false : newData.fieldName10.value = true;
                                    // !newData.fieldName11.checked ? newData.fieldName11.value = false : newData.fieldName11.value = true;
                                    temporaryData.push(newData); // Add data to temporary array
                                    $("#temporaryTable").append(`                                                                                                                                                                 `);
                                    // Clear input fields
                                    $("#PeriodsName").val("");
                                    $("#startTime").val("");
                                    $("#endTime").val("");
                                    $("#saturday").val("");
                                    $("#sunday").val("");
                                    $("#monday").val("");
                                    $("#thursday").val("");
                                    $("#wednesday").val("");
                                    $("#tuesday").val("");
                                    $("#friday").val("");
                                    $("#hours").val("");
                                    $("#minutes").val("");
                                    // ... clear other input fields
                                    // Disable submit button if no data (optional)
                                    $("#submitButton").prop("disabled", temporaryData.length === 0);
                                }
                            });
                        });
                        $(document).on("click", ".removeButton", function () {
                            const index = $(this).closest("tr").index();
                            temporaryData.splice(index, 1);
                            $(this).closest("tr").remove();

                            // Update submit button state (optional)
                            $("#submitButton").prop("disabled", temporaryData.length === 0);
                        });

                        $("#submitButton").click(function () {
                            const periodsInput = document.getElementById("PeriodsName");
                            const periodPermanenceModelsId = document.getElementById("periodPermanenceModelsId");
                            if (!periodsInput.value) {
                                event.preventDefault(); // Prevent form submission

                                Swal.fire({

                                    icon: 'error',
                                    title: 'يرجى إدخال الفترة',
                                    customClass: {
                                        confirmButton: 'btn btn-primary'
                                    },
                                    buttonsStyling: false
                                });
                            }
                            if (periodPermanenceModelsId.value == "") {
                                event.preventDefault(); // Prevent form submission

                                Swal.fire({

                                    icon: 'error',
                                    title: 'يرجى إختيار الدوام',
                                    customClass: {
                                        confirmButton: 'btn btn-primary'
                                    },
                                    buttonsStyling: false
                                });
                            }
                            // // Send data to server using AJAX or other methods
                            // console.log("Temporary Data:", temporaryData); // Simulate sending to server
                            $("#submitButton").val(JSON.stringify(temporaryData));
                            // Clear temporary data and table after submission (optional)
                            temporaryData = [];
                            $("#temporaryTable").empty();
                            $("#submitButton").prop("disabled", true);
                        });
                    </script>
                }
